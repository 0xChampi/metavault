{
  "address": "0x1aEe32285611Bac2C9ce74A92401291Aa10e682C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Earn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "available",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balanceOfThis",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "depositMultiple",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "earn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gauge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPricePerFullShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "contract IManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "min",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gauge",
          "type": "address"
        }
      ],
      "name": "setGauge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_min",
          "type": "uint256"
        }
      ],
      "name": "setMin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalDepositCap",
          "type": "uint256"
        }
      ],
      "name": "setTotalDepositCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDepositCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_output",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_output",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x125de123d709114104d8c027ac67551bc348026a6bb637e83bcc83d663b03407",
  "receipt": {
    "to": null,
    "from": "0x36D68d13dD18Fe8076833Ef99245Ef33B00A7259",
    "contractAddress": "0x1aEe32285611Bac2C9ce74A92401291Aa10e682C",
    "transactionIndex": 57,
    "gasUsed": "3014891",
    "logsBloom": "0x
    "blockHash": "0x6f92b739cefff5ac2fa6bd746e27bbb1d05b30eb74b850d1c309e03621801af4",
    "transactionHash": "0x125de123d709114104d8c027ac67551bc348026a6bb637e83bcc83d663b03407",
    "logs": [],
    "blockNumber": 26642580,
    "cumulativeGasUsed": "6776606",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "yAxis Stablecoin Canonical Vault",
    "CV:S",
    "0xe8b9C674762f6A80af7112C21Fb8D71a215F075f"
  ],
  "solcInputHash": "48b6da032f30ad042da481725bdcdb1e",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Earn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOfThis\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"depositMultiple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"earn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"contract IManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"}],\"name\":\"setGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"}],\"name\":\"setMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalDepositCap\",\"type\":\"uint256\"}],\"name\":\"setTotalDepositCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDepositCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_output\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_output\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"available(address)\":{\"details\":\"Custom logic in here for how much the vault allows to be borrowedSets minimum required on-hand to keep small withdrawals cheap\",\"params\":{\"_token\":\"The address of the token\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"_manager\":\"The address of the vault manager contract\",\"_name\":\"The name of the vault token for depositors\",\"_symbol\":\"The symbol of the vault token for depositors\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"decreaseApproval(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to deposit\",\"_token\":\"The address of the token\"}},\"depositMultiple(address[],uint256[])\":{\"details\":\"Users must approve the vault to spend their stablecoin\",\"params\":{\"_amounts\":\"The amounts of each token being deposited\",\"_tokens\":\"The addresses of each token being deposited\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"increaseApproval(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"setGauge(address)\":{\"details\":\"Allow to be unset with the zero address\",\"params\":{\"_gauge\":\"The address of the gauge\"}},\"setMin(uint256)\":{\"details\":\"min is the minimum percent of funds to keep small withdrawals cheap\",\"params\":{\"_min\":\"The new min value\"}},\"setTotalDepositCap(uint256)\":{\"details\":\"totalDepositCap is the maximum amount of value that can be deposited to the metavault at a time\",\"params\":{\"_totalDepositCap\":\"The new totalDepositCap value\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"transfer token to a contract address with additional data if the recipient is a contact.\",\"params\":{\"_data\":\"The extra data to be passed to the receiving contract.\",\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"withdraw(uint256,address)\":{\"params\":{\"_output\":\"The address of the token to receive\",\"_shares\":\"The amount of shares to withdraw\"}},\"withdrawAll(address)\":{\"params\":{\"_output\":\"The address of the desired token to receive\"}},\"withdrawFee(uint256)\":{\"params\":{\"_amount\":\"The amount to withdraw\"}}},\"title\":\"Vault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"available(address)\":{\"notice\":\"Returns the amount of tokens available to be sent to strategies\"},\"balance()\":{\"notice\":\"Returns the total balance of the vault, including strategies\"},\"balanceOfThis()\":{\"notice\":\"Returns the balance of allowed tokens present on the vault only\"},\"deposit(address,uint256)\":{\"notice\":\"Deposits the given token into the vault\"},\"depositMultiple(address[],uint256[])\":{\"notice\":\"Deposits multiple tokens simultaneously to the vault\"},\"earn(address,address)\":{\"notice\":\"Sends accrued 3CRV tokens on the metavault to the controller to be deposited to strategies\"},\"getPricePerFullShare()\":{\"notice\":\"Returns the rate of vault shares\"},\"getTokens()\":{\"notice\":\"Returns an array of the tokens for this vault\"},\"setGauge(address)\":{\"notice\":\"Sets the value of this vault's gauge\"},\"setMin(uint256)\":{\"notice\":\"Sets the value for min\"},\"setTotalDepositCap(uint256)\":{\"notice\":\"Sets the value for the totalDepositCap\"},\"withdraw(uint256,address)\":{\"notice\":\"Withdraws an amount of shares to a given output token\"},\"withdrawAll(address)\":{\"notice\":\"Withdraw the entire balance for an account\"},\"withdrawFee(uint256)\":{\"notice\":\"Returns the fee for withdrawing the given amount\"}},\"notice\":\"The vault is where users deposit and withdraw like-kind assets that have been added by governance.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/v3/Vault.sol\":\"Vault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../../GSN/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) public {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\"},\"contracts/v3/Vault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/GSN/Context.sol\\\";\\n\\nimport \\\"./VaultToken.sol\\\";\\n\\nimport \\\"./interfaces/IManager.sol\\\";\\nimport \\\"./interfaces/IController.sol\\\";\\nimport \\\"./interfaces/IConverter.sol\\\";\\nimport \\\"./interfaces/IVault.sol\\\";\\nimport \\\"./interfaces/ExtendedIERC20.sol\\\";\\n\\n/**\\n * @title Vault\\n * @notice The vault is where users deposit and withdraw\\n * like-kind assets that have been added by governance.\\n */\\ncontract Vault is VaultToken, IVault {\\n    using Address for address;\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    uint256 public constant MAX = 10000;\\n\\n    IManager public immutable override manager;\\n\\n    // Strategist-updated variables\\n    address public override gauge;\\n    uint256 public min;\\n    uint256 public totalDepositCap;\\n\\n    event Deposit(address indexed account, uint256 amount);\\n    event Withdraw(address indexed account, uint256 amount);\\n    event Earn(address indexed token, uint256 amount);\\n\\n    /**\\n     * @param _name The name of the vault token for depositors\\n     * @param _symbol The symbol of the vault token for depositors\\n     * @param _manager The address of the vault manager contract\\n     */\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        address _manager\\n    )\\n        public\\n        VaultToken(_name, _symbol)\\n    {\\n        manager = IManager(_manager);\\n        min = 9500;\\n        totalDepositCap = 10000000 ether;\\n    }\\n\\n    /**\\n     * STRATEGIST-ONLY FUNCTIONS\\n     */\\n\\n    /**\\n     * @notice Sets the value of this vault's gauge\\n     * @dev Allow to be unset with the zero address\\n     * @param _gauge The address of the gauge\\n     */\\n    function setGauge(\\n        address _gauge\\n    )\\n        external\\n        notHalted\\n        onlyStrategist\\n    {\\n        gauge = _gauge;\\n    }\\n\\n    /**\\n     * @notice Sets the value for min\\n     * @dev min is the minimum percent of funds to keep small withdrawals cheap\\n     * @param _min The new min value\\n     */\\n    function setMin(\\n        uint256 _min\\n    )\\n        external\\n        notHalted\\n        onlyStrategist\\n    {\\n        require(_min <= MAX, \\\"!_min\\\");\\n        min = _min;\\n    }\\n\\n    /**\\n     * @notice Sets the value for the totalDepositCap\\n     * @dev totalDepositCap is the maximum amount of value that can be deposited\\n     * to the metavault at a time\\n     * @param _totalDepositCap The new totalDepositCap value\\n     */\\n    function setTotalDepositCap(\\n        uint256 _totalDepositCap\\n    )\\n        external\\n        notHalted\\n        onlyStrategist\\n    {\\n        totalDepositCap = _totalDepositCap;\\n    }\\n\\n    /**\\n     * HARVESTER-ONLY FUNCTIONS\\n     */\\n\\n    /**\\n     * @notice Sends accrued 3CRV tokens on the metavault to the controller to be deposited to strategies\\n     */\\n    function earn(\\n        address _token,\\n        address _strategy\\n    )\\n        external\\n        override\\n        checkToken(_token)\\n        notHalted\\n        onlyHarvester\\n    {\\n        require(manager.allowedStrategies(_strategy), \\\"!_strategy\\\");\\n        IController _controller = IController(manager.controllers(address(this)));\\n        if (_controller.investEnabled()) {\\n            uint256 _balance = available(_token);\\n            IERC20(_token).safeTransfer(address(_controller), _balance);\\n            _controller.earn(_strategy, _token, _balance);\\n            emit Earn(_token, _balance);\\n        }\\n    }\\n\\n    /**\\n     * USER-FACING FUNCTIONS\\n     */\\n\\n    /**\\n     * @notice Deposits the given token into the vault\\n     * @param _token The address of the token\\n     * @param _amount The amount of tokens to deposit\\n     */\\n     function deposit(\\n        address _token,\\n        uint256 _amount\\n     )\\n        public\\n        override\\n        checkToken(_token)\\n        notHalted\\n        returns (uint256 _shares)\\n    {\\n        require(_amount > 0, \\\"!_amount\\\");\\n\\n        uint256 _balance = balance();\\n\\n        uint256 _before = IERC20(_token).balanceOf(address(this));\\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n        _amount = IERC20(_token).balanceOf(address(this)).sub(_before);\\n\\n        if (_amount > 0) {\\n            _amount = _normalizeDecimals(_token, _amount);\\n\\n            if (totalSupply() > 0) {\\n                _amount = (_amount.mul(totalSupply())).div(_balance);\\n            }\\n\\n            _shares = _shares.add(_amount);\\n        }\\n\\n        if (_shares > 0) {\\n            _mint(msg.sender, _shares);\\n            require(totalSupply() <= totalDepositCap, \\\">totalDepositCap\\\");\\n            emit Deposit(msg.sender, _shares);\\n        }\\n    }\\n\\n    /**\\n     * @notice Deposits multiple tokens simultaneously to the vault\\n     * @dev Users must approve the vault to spend their stablecoin\\n     * @param _tokens The addresses of each token being deposited\\n     * @param _amounts The amounts of each token being deposited\\n     */\\n    function depositMultiple(\\n        address[] calldata _tokens,\\n        uint256[] calldata _amounts\\n    )\\n        external\\n        override\\n        notHalted\\n        returns (uint256 _shares)\\n    {\\n        require(_tokens.length == _amounts.length, \\\"!length\\\");\\n\\n        for (uint8 i; i < _amounts.length; i++) {\\n            _shares = _shares.add(deposit(_tokens[i], _amounts[i]));\\n        }\\n    }\\n\\n    /**\\n     * @notice Withdraws an amount of shares to a given output token\\n     * @param _shares The amount of shares to withdraw\\n     * @param _output The address of the token to receive\\n     */\\n    function withdraw(\\n        uint256 _shares,\\n        address _output\\n    )\\n        public\\n        override\\n        checkToken(_output)\\n    {\\n        uint256 _amount = (balance().mul(_shares)).div(totalSupply());\\n        _burn(msg.sender, _shares);\\n\\n        uint256 _withdrawalProtectionFee = manager.withdrawalProtectionFee();\\n        if (_withdrawalProtectionFee > 0) {\\n            uint256 _withdrawalProtection = _amount.mul(_withdrawalProtectionFee).div(MAX);\\n            _amount = _amount.sub(_withdrawalProtection);\\n        }\\n\\n        uint256 _balance = IERC20(_output).balanceOf(address(this));\\n        if (_balance < _amount) {\\n            IController _controller = IController(manager.controllers(address(this)));\\n            uint256 _toWithdraw = _amount.sub(_balance);\\n            if (_controller.strategies() > 0) {\\n                _controller.withdraw(_output, _toWithdraw);\\n            }\\n            uint256 _after = IERC20(_output).balanceOf(address(this));\\n            uint256 _diff = _after.sub(_balance);\\n            if (_diff < _toWithdraw) {\\n                _amount = _balance.add(_diff);\\n            }\\n        }\\n\\n        IERC20(_output).safeTransfer(msg.sender, _amount);\\n        emit Withdraw(msg.sender, _amount);\\n    }\\n\\n    /**\\n     * @notice Withdraw the entire balance for an account\\n     * @param _output The address of the desired token to receive\\n     */\\n    function withdrawAll(\\n        address _output\\n    )\\n        external\\n        override\\n    {\\n        withdraw(balanceOf(msg.sender), _output);\\n    }\\n\\n    /**\\n     * VIEWS\\n     */\\n\\n    /**\\n     * @notice Returns the amount of tokens available to be sent to strategies\\n     * @dev Custom logic in here for how much the vault allows to be borrowed\\n     * @dev Sets minimum required on-hand to keep small withdrawals cheap\\n     * @param _token The address of the token\\n     */\\n    function available(\\n        address _token\\n    )\\n        public\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        return IERC20(_token).balanceOf(address(this)).mul(min).div(MAX);\\n    }\\n\\n    /**\\n     * @notice Returns the total balance of the vault, including strategies\\n     */\\n    function balance()\\n        public\\n        view\\n        override\\n        returns (uint256 _balance)\\n    {\\n        return balanceOfThis().add(IController(manager.controllers(address(this))).balanceOf());\\n    }\\n\\n    /**\\n     * @notice Returns the balance of allowed tokens present on the vault only\\n     */\\n    function balanceOfThis()\\n        public\\n        view\\n        returns (uint256 _balance)\\n    {\\n        address[] memory _tokens = manager.getTokens(address(this));\\n        for (uint8 i; i < _tokens.length; i++) {\\n            address _token = _tokens[i];\\n            _balance = _balance.add(_normalizeDecimals(_token, IERC20(_token).balanceOf(address(this))));\\n        }\\n    }\\n\\n    /**\\n     * @notice Returns the rate of vault shares\\n     */\\n    function getPricePerFullShare()\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        return balance().mul(1e18).div(totalSupply());\\n    }\\n\\n    /**\\n     * @notice Returns an array of the tokens for this vault\\n     */\\n    function getTokens()\\n        external\\n        view\\n        override\\n        returns (address[] memory)\\n    {\\n        return manager.getTokens(address(this));\\n    }\\n\\n    /**\\n     * @notice Returns the fee for withdrawing the given amount\\n     * @param _amount The amount to withdraw\\n     */\\n    function withdrawFee(\\n        uint256 _amount\\n    )\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        return manager.withdrawalProtectionFee().mul(_amount).div(MAX);\\n    }\\n\\n    function _normalizeDecimals(\\n        address _token,\\n        uint256 _amount\\n    )\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 _decimals = uint256(ExtendedIERC20(_token).decimals());\\n        if (_decimals < 18) {\\n            _amount = _amount.mul(10**(18-_decimals));\\n        }\\n        return _amount;\\n    }\\n\\n    function _checkToken(\\n        address _token\\n    )\\n        private\\n        view\\n        returns (bool)\\n    {\\n        return manager.allowedTokens(_token) && manager.vaults(_token) == address(this);\\n    }\\n\\n    /**\\n     * MODIFIERS\\n     */\\n\\n    modifier checkToken(address _token) {\\n        require(_checkToken(_token), \\\"!_token\\\");\\n        _;\\n    }\\n\\n    modifier notHalted() {\\n        require(!manager.halted(), \\\"halted\\\");\\n        _;\\n    }\\n\\n    modifier onlyHarvester() {\\n        require(msg.sender == manager.harvester(), \\\"!harvester\\\");\\n        _;\\n    }\\n\\n    modifier onlyStrategist() {\\n        require(msg.sender == manager.strategist(), \\\"!strategist\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xd890ee3b791c11653296de84dd3a9086b60865a0ea2dd08f4369c4dd16d20acc\",\"license\":\"MIT\"},\"contracts/v3/VaultToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.6.12;\\n\\nimport \\\"../vendor/LinkToken/token/LinkERC20.sol\\\";\\nimport \\\"../vendor/LinkToken/ERC677Token.sol\\\";\\n\\n/**\\n * @notice Vault Token\\n * @dev Contract has been copied from:\\n * https://github.com/smartcontractkit/LinkToken/blob/master/contracts/v0.6/LinkToken.sol\\n * with modification made to specify name and symbol, deploys with 0 total supply\\n */\\ncontract VaultToken is LinkERC20, ERC677Token {\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol\\n    )\\n        public\\n        ERC20(_name, _symbol)\\n    // solhint-disable-next-line no-empty-blocks\\n    {}\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount)\\n        internal\\n        override\\n        virtual\\n        validAddress(recipient)\\n    {\\n        super._transfer(sender, recipient, amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n     *\\n     * This is internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount)\\n        internal\\n        override\\n        virtual\\n        validAddress(spender)\\n    {\\n        super._approve(owner, spender, amount);\\n    }\\n\\n\\n    // MODIFIERS\\n\\n    modifier validAddress(address _recipient) {\\n        require(_recipient != address(this), \\\"!validAddress\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x5333f538bfd1bf883cdbc59caeea2c5c4ec4cf6c581eaf5ce405f6066a608581\",\"license\":\"MIT\"},\"contracts/v3/interfaces/ExtendedIERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\ninterface ExtendedIERC20 {\\n    function decimals() external view returns (uint8);\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x4ba01563f54a2993c1491d32f777e3df1af02151bef35d87a138b6d8fb5819bd\",\"license\":\"MIT\"},\"contracts/v3/interfaces/IController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IManager.sol\\\";\\n\\ninterface IController {\\n    function balanceOf() external view returns (uint256);\\n    function converter(address _vault) external view returns (address);\\n    function earn(address _strategy, address _token, uint256 _amount) external;\\n    function investEnabled() external view returns (bool);\\n    function harvestStrategy(address _strategy, uint256 _estimatedWETH, uint256 _estimatedYAXIS) external;\\n    function manager() external view returns (IManager);\\n    function strategies() external view returns (uint256);\\n    function withdraw(address _token, uint256 _amount) external;\\n    function withdrawAll(address _strategy, address _convert) external;\\n}\\n\",\"keccak256\":\"0x7cf6dd59e7aa05895b7682bf59c96918b9d5baf529d839472b475f9119ba50c9\",\"license\":\"MIT\"},\"contracts/v3/interfaces/IConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IManager.sol\\\";\\n\\ninterface IConverter {\\n    function manager() external view returns (IManager);\\n    function convert(\\n        address _input,\\n        address _output,\\n        uint256 _inputAmount,\\n        uint256 _estimatedOutput\\n    ) external returns (uint256 _outputAmount);\\n    function expected(\\n        address _input,\\n        address _output,\\n        uint256 _inputAmount\\n    ) external view returns (uint256 _outputAmount);\\n}\\n\",\"keccak256\":\"0x6969eecc0d8f1497daf53f2641089dc3d36d7a057b959815b1b565e5b88b8d55\",\"license\":\"MIT\"},\"contracts/v3/interfaces/IManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IManager {\\n    function addToken(address, address) external;\\n    function allowedControllers(address) external view returns (bool);\\n    function allowedConverters(address) external view returns (bool);\\n    function allowedStrategies(address) external view returns (bool);\\n    function allowedTokens(address) external view returns (bool);\\n    function allowedVaults(address) external view returns (bool);\\n    function controllers(address) external view returns (address);\\n    function getHarvestFeeInfo() external view returns (address, address, uint256);\\n    function getTokens(address) external view returns (address[] memory);\\n    function governance() external view returns (address);\\n    function halted() external view returns (bool);\\n    function harvester() external view returns (address);\\n    function insuranceFee() external view returns (uint256);\\n    function insurancePool() external view returns (address);\\n    function insurancePoolFee() external view returns (uint256);\\n    function pendingStrategist() external view returns (address);\\n    function removeToken(address, address) external;\\n    function stakingPool() external view returns (address);\\n    function stakingPoolShareFee() external view returns (uint256);\\n    function strategist() external view returns (address);\\n    function tokens(address, uint256) external view returns (address);\\n    function treasury() external view returns (address);\\n    function treasuryFee() external view returns (uint256);\\n    function vaults(address) external view returns (address);\\n    function withdrawalProtectionFee() external view returns (uint256);\\n    function yaxis() external view returns (address);\\n}\\n\",\"keccak256\":\"0x278428801b8a42fabc2ca66d14e1243163690478c913a0419cfd21df1a384be2\",\"license\":\"MIT\"},\"contracts/v3/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IManager.sol\\\";\\n\\ninterface IVault {\\n    function available(address _token) external view returns (uint256);\\n    function balance() external view returns (uint256);\\n    function deposit(address _token, uint256 _amount) external returns (uint256);\\n    function depositMultiple(address[] calldata _tokens, uint256[] calldata _amount) external returns (uint256);\\n    function earn(address _token, address _strategy) external;\\n    function gauge() external returns (address);\\n    function getPricePerFullShare() external view returns (uint256);\\n    function getTokens() external view returns (address[] memory);\\n    function manager() external view returns (IManager);\\n    function withdraw(uint256 _amount, address _output) external;\\n    function withdrawAll(address _output) external;\\n    function withdrawFee(uint256 _amount) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41f449f31aca061e89e21897e2b9a529fecaba38a6e4f2c3b277573762f76308\",\"license\":\"MIT\"},\"contracts/vendor/LinkToken/ERC677Token.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"./token/ERC677.sol\\\";\\nimport \\\"./token/ERC677Receiver.sol\\\";\\n\\nabstract contract ERC677Token is ERC20, ERC677 {\\n  /**\\n   * @dev transfer token to a contract address with additional data if the recipient is a contact.\\n   * @param _to The address to transfer to.\\n   * @param _value The amount to be transferred.\\n   * @param _data The extra data to be passed to the receiving contract.\\n   */\\n  function transferAndCall(address _to, uint _value, bytes memory _data)\\n    public\\n    override\\n    virtual\\n    returns (bool success)\\n  {\\n    super.transfer(_to, _value);\\n    emit Transfer(msg.sender, _to, _value, _data);\\n    if (isContract(_to)) {\\n      contractFallback(_to, _value, _data);\\n    }\\n    return true;\\n  }\\n\\n\\n  // PRIVATE\\n\\n  function contractFallback(address _to, uint _value, bytes memory _data)\\n    private\\n  {\\n    ERC677Receiver receiver = ERC677Receiver(_to);\\n    receiver.onTokenTransfer(msg.sender, _value, _data);\\n  }\\n\\n  function isContract(address _addr)\\n    private\\n    view\\n    returns (bool hasCode)\\n  {\\n    uint length;\\n    assembly { length := extcodesize(_addr) }\\n    return length > 0;\\n  }\\n}\\n\",\"keccak256\":\"0x9d3d49176dceb78ad813421140733a84c75ad73670ee5f068fdb57922e061559\",\"license\":\"MIT\"},\"contracts/vendor/LinkToken/token/ERC677.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nabstract contract ERC677 is IERC20 {\\n  function transferAndCall(address to, uint value, bytes memory data) public virtual returns (bool success);\\n\\n  event Transfer(address indexed from, address indexed to, uint value, bytes data);\\n}\\n\",\"keccak256\":\"0xba1367469a6525c7c36d327ec5852e53cc6e223aff8f7d62564164920ab20dca\",\"license\":\"MIT\"},\"contracts/vendor/LinkToken/token/ERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nabstract contract ERC677Receiver {\\n  function onTokenTransfer(address _sender, uint _value, bytes memory _data) public virtual;\\n}\\n\",\"keccak256\":\"0x2b1a361a02267a99d471ac65b4eff29ce1e2b3c4930a5d02927edce283b98156\",\"license\":\"MIT\"},\"contracts/vendor/LinkToken/token/LinkERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\nabstract contract LinkERC20 is ERC20 {\\n  /**\\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function increaseApproval(address spender, uint256 addedValue) public virtual returns (bool) {\\n    return super.increaseAllowance(spender, addedValue);\\n  }\\n\\n  /**\\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   * - `spender` must have allowance for the caller of at least\\n   * `subtractedValue`.\\n   */\\n  function decreaseApproval(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n    return super.decreaseAllowance(spender, subtractedValue);\\n  }\\n}\\n\",\"keccak256\":\"0x13bfa5830bcba22461588dff7132bcb4d7b98e9834764c639f33b9b520a061f5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200364038038062003640833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b506040526020908101518551909350859250849183918391620001c19160039185019062000218565b508051620001d790600490602084019062000218565b505060058054601260ff1990911617905550505060601b6001600160601b031916608052505061251c6006556a084595161401484a000000600755620002b4565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200025b57805160ff19168380011785556200028b565b828001600101855582156200028b579182015b828111156200028b5782518255916020019190600101906200026e565b50620002999291506200029d565b5090565b5b808211156200029957600081556001016200029e565b60805160601c61330a6200033660003980610858528061098e5280610f0c5280610fcc52806111265280611432528061145652806115165280611664528061172452806117f252806118cb5280611b045280611ccf5280611f5d528061209b52806121bc52806122525280612312528061240352806124ad525061330a6000f3fe608060405234801561001057600080fd5b50600436106101fa5760003560e01c806370a082311161011a578063aa6ca808116100ad578063d73dd6231161007c578063d73dd62314610739578063dd62ed3e14610765578063ebbf5c1714610793578063f8897945146107b0578063fa09e630146107b8576101fa565b8063aa6ca808146106b4578063b69ef8a81461070c578063be35761614610714578063d49d518114610731576101fa565b8063999eb6b1116100e9578063999eb6b11461064c578063a457c2d714610654578063a6f19c8414610680578063a9059cbb14610688576101fa565b806370a082311461055857806377c7b8fc1461057e578063797e566c1461058657806395d89b4114610644576101fa565b80634000aea01161019257806355a68ed31161016157806355a68ed3146104d05780635db88e85146104f657806366188463146104fe5780636bc9a5a91461052a576101fa565b80634000aea0146103aa57806345dc3dd81461046357806347e7ef2414610480578063481c6a75146104ac576101fa565b806318160ddd116101ce57806318160ddd1461032257806323b872dd1461032a578063313ce56714610360578063395093511461037e576101fa565b8062f714ce146101ff57806306fdde031461022d578063095ea7b3146102aa57806310098ad5146102ea575b600080fd5b61022b6004803603604081101561021557600080fd5b50803590602001356001600160a01b03166107de565b005b610235610c09565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561026f578181015183820152602001610257565b50505050905090810190601f16801561029c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102d6600480360360408110156102c057600080fd5b506001600160a01b038135169060200135610c9f565b604080519115158252519081900360200190f35b6103106004803603602081101561030057600080fd5b50356001600160a01b0316610cbd565b60408051918252519081900360200190f35b610310610d4a565b6102d66004803603606081101561034057600080fd5b506001600160a01b03813581169160208101359091169060400135610d50565b610368610dd8565b6040805160ff9092168252519081900360200190f35b6102d66004803603604081101561039457600080fd5b506001600160a01b038135169060200135610de1565b6102d6600480360360608110156103c057600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156103ef57600080fd5b82018360208201111561040157600080fd5b803590602001918460018302840111600160201b8311171561042257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e2f945050505050565b61022b6004803603602081101561047957600080fd5b5035610f0a565b6103106004803603604081101561049657600080fd5b506001600160a01b0381351690602001356110dd565b6104b4611430565b604080516001600160a01b039092168252519081900360200190f35b61022b600480360360208110156104e657600080fd5b50356001600160a01b0316611454565b61031061160b565b6102d66004803603604081101561051457600080fd5b506001600160a01b038135169060200135611611565b61022b6004803603604081101561054057600080fd5b506001600160a01b038135811691602001351661161d565b6103106004803603602081101561056e57600080fd5b50356001600160a01b0316611abf565b610310611ada565b6103106004803603604081101561059c57600080fd5b810190602081018135600160201b8111156105b657600080fd5b8201836020820111156105c857600080fd5b803590602001918460208302840111600160201b831117156105e957600080fd5b919390929091602081019035600160201b81111561060657600080fd5b82018360208201111561061857600080fd5b803590602001918460208302840111600160201b8311171561063957600080fd5b509092509050611b00565b610235611c68565b610310611cc9565b6102d66004803603604081101561066a57600080fd5b506001600160a01b038135169060200135611ec9565b6104b4611f31565b6102d66004803603604081101561069e57600080fd5b506001600160a01b038135169060200135611f45565b6106bc611f59565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156106f85781810151838201526020016106e0565b505050509050019250505060405180910390f35b610310612094565b6103106004803603602081101561072a57600080fd5b50356121ae565b610310612213565b6102d66004803603604081101561074f57600080fd5b506001600160a01b038135169060200135612219565b6103106004803603604081101561077b57600080fd5b506001600160a01b0381358116916020013516612225565b61022b600480360360208110156107a957600080fd5b5035612250565b6103106123e4565b61022b600480360360208110156107ce57600080fd5b50356001600160a01b03166123ea565b806107e8816123ff565b610823576040805162461bcd60e51b815260206004820152600760248201526610afba37b5b2b760c91b604482015290519081900360640190fd5b6000610848610830610d4a565b6108428661083c612094565b90612554565b906125ad565b905061085433856125ef565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663825139096040518163ffffffff1660e01b815260040160206040518083038186803b1580156108af57600080fd5b505afa1580156108c3573d6000803e3d6000fd5b505050506040513d60208110156108d957600080fd5b5051905080156109055760006108f56127106108428585612554565b905061090183826126eb565b9250505b6000846001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561095457600080fd5b505afa158015610968573d6000803e3d6000fd5b505050506040513d602081101561097e57600080fd5b5051905082811015610bb75760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663da8c229e306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156109f957600080fd5b505afa158015610a0d573d6000803e3d6000fd5b505050506040513d6020811015610a2357600080fd5b505190506000610a3385846126eb565b90506000826001600160a01b031663d9f9027f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7057600080fd5b505afa158015610a84573d6000803e3d6000fd5b505050506040513d6020811015610a9a57600080fd5b50511115610b1257816001600160a01b031663f3fef3a388836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610af957600080fd5b505af1158015610b0d573d6000803e3d6000fd5b505050505b6000876001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610b6157600080fd5b505afa158015610b75573d6000803e3d6000fd5b505050506040513d6020811015610b8b57600080fd5b505190506000610b9b82866126eb565b905082811015610bb257610baf858261272d565b96505b505050505b610bcb6001600160a01b0386163385612787565b60408051848152905133917f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364919081900360200190a2505050505050565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610c955780601f10610c6a57610100808354040283529160200191610c95565b820191906000526020600020905b815481529060010190602001808311610c7857829003601f168201915b5050505050905090565b6000610cb3610cac6127de565b84846127e2565b5060015b92915050565b6000610cb7612710610842600654856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610d1857600080fd5b505afa158015610d2c573d6000803e3d6000fd5b505050506040513d6020811015610d4257600080fd5b505190612554565b60025490565b6000610d5d84848461283c565b610dcd84610d696127de565b610dc8856040518060600160405280602881526020016131f4602891396001600160a01b038a16600090815260016020526040812090610da76127de565b6001600160a01b031681526020810191909152604001600020549190612896565b6127e2565b5060015b9392505050565b60055460ff1690565b6000610cb3610dee6127de565b84610dc88560016000610dff6127de565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061272d565b6000610e3b8484611f45565b50836001600160a01b0316336001600160a01b03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1685856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610eb6578181015183820152602001610e9e565b50505050905090810190601f168015610ee35780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3610efa8461292d565b15610dcd57610dcd848484612933565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b9b8af0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6357600080fd5b505afa158015610f77573d6000803e3d6000fd5b505050506040513d6020811015610f8d57600080fd5b505115610fca576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631fe4a6866040518163ffffffff1660e01b815260040160206040518083038186803b15801561102357600080fd5b505afa158015611037573d6000803e3d6000fd5b505050506040513d602081101561104d57600080fd5b50516001600160a01b03163314611099576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6127108111156110d8576040805162461bcd60e51b815260206004820152600560248201526410afb6b4b760d91b604482015290519081900360640190fd5b600655565b6000826110e9816123ff565b611124576040805162461bcd60e51b815260206004820152600760248201526610afba37b5b2b760c91b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b9b8af0b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561117d57600080fd5b505afa158015611191573d6000803e3d6000fd5b505050506040513d60208110156111a757600080fd5b5051156111e4576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60008311611224576040805162461bcd60e51b81526020600482015260086024820152670857d85b5bdd5b9d60c21b604482015290519081900360640190fd5b600061122e612094565b90506000856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561127f57600080fd5b505afa158015611293573d6000803e3d6000fd5b505050506040513d60208110156112a957600080fd5b505190506112c26001600160a01b038716333088612a0d565b61134581876001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561131357600080fd5b505afa158015611327573d6000803e3d6000fd5b505050506040513d602081101561133d57600080fd5b5051906126eb565b9450841561138f576113578686612a67565b94506000611363610d4a565b11156113825761137f82610842611378610d4a565b8890612554565b94505b61138c848661272d565b93505b83156114275761139f3385612af9565b6007546113aa610d4a565b11156113f0576040805162461bcd60e51b815260206004820152601060248201526f03e746f74616c4465706f7369744361760841b604482015290519081900360640190fd5b60408051858152905133917fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c919081900360200190a25b50505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b9b8af0b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114ad57600080fd5b505afa1580156114c1573d6000803e3d6000fd5b505050506040513d60208110156114d757600080fd5b505115611514576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631fe4a6866040518163ffffffff1660e01b815260040160206040518083038186803b15801561156d57600080fd5b505afa158015611581573d6000803e3d6000fd5b505050506040513d602081101561159757600080fd5b50516001600160a01b031633146115e3576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60075481565b6000610dd18383611ec9565b81611627816123ff565b611662576040805162461bcd60e51b815260206004820152600760248201526610afba37b5b2b760c91b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b9b8af0b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116bb57600080fd5b505afa1580156116cf573d6000803e3d6000fd5b505050506040513d60208110156116e557600080fd5b505115611722576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634bdaeac16040518163ffffffff1660e01b815260040160206040518083038186803b15801561177b57600080fd5b505afa15801561178f573d6000803e3d6000fd5b505050506040513d60208110156117a557600080fd5b50516001600160a01b031633146117f0576040805162461bcd60e51b815260206004820152600a60248201526910b430b93b32b9ba32b960b11b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637ae6c8d4836040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561185d57600080fd5b505afa158015611871573d6000803e3d6000fd5b505050506040513d602081101561188757600080fd5b50516118c7576040805162461bcd60e51b815260206004820152600a602482015269215f737472617465677960b01b604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663da8c229e306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561193657600080fd5b505afa15801561194a573d6000803e3d6000fd5b505050506040513d602081101561196057600080fd5b5051604080516371f4f3fb60e01b815290519192506001600160a01b038316916371f4f3fb91600480820192602092909190829003018186803b1580156119a657600080fd5b505afa1580156119ba573d6000803e3d6000fd5b505050506040513d60208110156119d057600080fd5b505115611ab95760006119e285610cbd565b90506119f86001600160a01b0386168383612787565b816001600160a01b03166338e886108587846040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b158015611a6057600080fd5b505af1158015611a74573d6000803e3d6000fd5b50506040805184815290516001600160a01b03891693507f9b883692663cf2cc636d9eda0392f2c7ff1a3163a5cef27fa1f8bb438ec73ab592509081900360200190a2505b50505050565b6001600160a01b031660009081526020819052604090205490565b6000611afb611ae7610d4a565b610842670de0b6b3a764000061083c612094565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b9b8af0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b5b57600080fd5b505afa158015611b6f573d6000803e3d6000fd5b505050506040513d6020811015611b8557600080fd5b505115611bc2576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b838214611c00576040805162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015290519081900360640190fd5b60005b60ff8116831115611c5f57611c55611c4e87878460ff16818110611c2357fe5b905060200201356001600160a01b031686868560ff16818110611c4257fe5b905060200201356110dd565b839061272d565b9150600101611c03565b50949350505050565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610c955780601f10610c6a57610100808354040283529160200191610c95565b600060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663450efe21306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060006040518083038186803b158015611d3a57600080fd5b505afa158015611d4e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611d7757600080fd5b8101908080516040519392919084600160201b821115611d9657600080fd5b908301906020820185811115611dab57600080fd5b82518660208202830111600160201b82111715611dc757600080fd5b82525081516020918201928201910280838360005b83811015611df4578181015183820152602001611ddc565b50505050905001604052505050905060005b81518160ff161015611ec4576000828260ff1681518110611e2357fe5b60200260200101519050611eb9611eb282836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015611e8157600080fd5b505afa158015611e95573d6000803e3d6000fd5b505050506040513d6020811015611eab57600080fd5b5051612a67565b859061272d565b935050600101611e06565b505090565b6000610cb3611ed66127de565b84610dc8856040518060600160405280602581526020016132b06025913960016000611f006127de565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190612896565b60055461010090046001600160a01b031681565b6000610cb3611f526127de565b848461283c565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663450efe21306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060006040518083038186803b158015611fc857600080fd5b505afa158015611fdc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561200557600080fd5b8101908080516040519392919084600160201b82111561202457600080fd5b90830190602082018581111561203957600080fd5b82518660208202830111600160201b8211171561205557600080fd5b82525081516020918201928201910280838360005b8381101561208257818101518382015260200161206a565b50505050905001604052505050905090565b6000611afb7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663da8c229e306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561210657600080fd5b505afa15801561211a573d6000803e3d6000fd5b505050506040513d602081101561213057600080fd5b50516040805163722713f760e01b815290516001600160a01b039092169163722713f791600480820192602092909190829003018186803b15801561217457600080fd5b505afa158015612188573d6000803e3d6000fd5b505050506040513d602081101561219e57600080fd5b50516121a8611cc9565b9061272d565b6000610cb7612710610842847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663825139096040518163ffffffff1660e01b815260040160206040518083038186803b158015610d1857600080fd5b61271081565b6000610dd18383610de1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b9b8af0b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156122a957600080fd5b505afa1580156122bd573d6000803e3d6000fd5b505050506040513d60208110156122d357600080fd5b505115612310576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631fe4a6866040518163ffffffff1660e01b815260040160206040518083038186803b15801561236957600080fd5b505afa15801561237d573d6000803e3d6000fd5b505050506040513d602081101561239357600080fd5b50516001600160a01b031633146123df576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b600755565b60065481565b6123fc6123f633611abf565b826107de565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e744092e836040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561246e57600080fd5b505afa158015612482573d6000803e3d6000fd5b505050506040513d602081101561249857600080fd5b50518015610cb75750306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a622ee7c846040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561251857600080fd5b505afa15801561252c573d6000803e3d6000fd5b505050506040513d602081101561254257600080fd5b50516001600160a01b03161492915050565b60008261256357506000610cb7565b8282028284828161257057fe5b0414610dd15760405162461bcd60e51b81526004018080602001828103825260218152602001806131d36021913960400191505060405180910390fd5b6000610dd183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612be9565b6001600160a01b0382166126345760405162461bcd60e51b815260040180806020018281038252602181526020018061321c6021913960400191505060405180910390fd5b612640826000836127d9565b61267d81604051806060016040528060228152602001613143602291396001600160a01b0385166000908152602081905260409020549190612896565b6001600160a01b0383166000908152602081905260409020556002546126a390826126eb565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000610dd183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612896565b600082820183811015610dd1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526127d9908490612c4e565b505050565b3390565b816001600160a01b038116301415612831576040805162461bcd60e51b815260206004820152600d60248201526c2176616c69644164647265737360981b604482015290519081900360640190fd5b611ab9848484612cff565b816001600160a01b03811630141561288b576040805162461bcd60e51b815260206004820152600d60248201526c2176616c69644164647265737360981b604482015290519081900360640190fd5b611ab9848484612deb565b600081848411156129255760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128ea5781810151838201526020016128d2565b50505050905090810190601f1680156129175780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b3b151590565b604051635260769b60e11b815233600482018181526024830185905260606044840190815284516064850152845187946001600160a01b0386169463a4c0ed369490938993899360840190602085019080838360005b838110156129a1578181015183820152602001612989565b50505050905090810190601f1680156129ce5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156129ef57600080fd5b505af1158015612a03573d6000803e3d6000fd5b5050505050505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611ab9908590612c4e565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015612aa357600080fd5b505afa158015612ab7573d6000803e3d6000fd5b505050506040513d6020811015612acd57600080fd5b505160ff1690506012811015612af157612aee836012839003600a0a612554565b92505b509092915050565b6001600160a01b038216612b54576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b612b60600083836127d9565b600254612b6d908261272d565b6002556001600160a01b038216600090815260208190526040902054612b93908261272d565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008183612c385760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128ea5781810151838201526020016128d2565b506000838581612c4457fe5b0495945050505050565b6060612ca3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612f469092919063ffffffff16565b8051909150156127d957808060200190516020811015612cc257600080fd5b50516127d95760405162461bcd60e51b815260040180806020018281038252602a815260200180613286602a913960400191505060405180910390fd5b6001600160a01b038316612d445760405162461bcd60e51b81526004018080602001828103825260248152602001806132626024913960400191505060405180910390fd5b6001600160a01b038216612d895760405162461bcd60e51b81526004018080602001828103825260228152602001806131656022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316612e305760405162461bcd60e51b815260040180806020018281038252602581526020018061323d6025913960400191505060405180910390fd5b6001600160a01b038216612e755760405162461bcd60e51b81526004018080602001828103825260238152602001806131206023913960400191505060405180910390fd5b612e808383836127d9565b612ebd81604051806060016040528060268152602001613187602691396001600160a01b0386166000908152602081905260409020549190612896565b6001600160a01b038085166000908152602081905260408082209390935590841681522054612eec908261272d565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6060612f558484600085612f5d565b949350505050565b606082471015612f9e5760405162461bcd60e51b81526004018080602001828103825260268152602001806131ad6026913960400191505060405180910390fd5b612fa78561292d565b612ff8576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106130375780518252601f199092019160209182019101613018565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613099576040519150601f19603f3d011682016040523d82523d6000602084013e61309e565b606091505b50915091506130ae8282866130b9565b979650505050505050565b606083156130c8575081610dd1565b8251156130d85782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156128ea5781810151838201526020016128d256fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122096ec597462b4e835db056e5db17ae8431e975727175f5807cc10f6364764ab7264736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101fa5760003560e01c806370a082311161011a578063aa6ca808116100ad578063d73dd6231161007c578063d73dd62314610739578063dd62ed3e14610765578063ebbf5c1714610793578063f8897945146107b0578063fa09e630146107b8576101fa565b8063aa6ca808146106b4578063b69ef8a81461070c578063be35761614610714578063d49d518114610731576101fa565b8063999eb6b1116100e9578063999eb6b11461064c578063a457c2d714610654578063a6f19c8414610680578063a9059cbb14610688576101fa565b806370a082311461055857806377c7b8fc1461057e578063797e566c1461058657806395d89b4114610644576101fa565b80634000aea01161019257806355a68ed31161016157806355a68ed3146104d05780635db88e85146104f657806366188463146104fe5780636bc9a5a91461052a576101fa565b80634000aea0146103aa57806345dc3dd81461046357806347e7ef2414610480578063481c6a75146104ac576101fa565b806318160ddd116101ce57806318160ddd1461032257806323b872dd1461032a578063313ce56714610360578063395093511461037e576101fa565b8062f714ce146101ff57806306fdde031461022d578063095ea7b3146102aa57806310098ad5146102ea575b600080fd5b61022b6004803603604081101561021557600080fd5b50803590602001356001600160a01b03166107de565b005b610235610c09565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561026f578181015183820152602001610257565b50505050905090810190601f16801561029c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102d6600480360360408110156102c057600080fd5b506001600160a01b038135169060200135610c9f565b604080519115158252519081900360200190f35b6103106004803603602081101561030057600080fd5b50356001600160a01b0316610cbd565b60408051918252519081900360200190f35b610310610d4a565b6102d66004803603606081101561034057600080fd5b506001600160a01b03813581169160208101359091169060400135610d50565b610368610dd8565b6040805160ff9092168252519081900360200190f35b6102d66004803603604081101561039457600080fd5b506001600160a01b038135169060200135610de1565b6102d6600480360360608110156103c057600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156103ef57600080fd5b82018360208201111561040157600080fd5b803590602001918460018302840111600160201b8311171561042257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e2f945050505050565b61022b6004803603602081101561047957600080fd5b5035610f0a565b6103106004803603604081101561049657600080fd5b506001600160a01b0381351690602001356110dd565b6104b4611430565b604080516001600160a01b039092168252519081900360200190f35b61022b600480360360208110156104e657600080fd5b50356001600160a01b0316611454565b61031061160b565b6102d66004803603604081101561051457600080fd5b506001600160a01b038135169060200135611611565b61022b6004803603604081101561054057600080fd5b506001600160a01b038135811691602001351661161d565b6103106004803603602081101561056e57600080fd5b50356001600160a01b0316611abf565b610310611ada565b6103106004803603604081101561059c57600080fd5b810190602081018135600160201b8111156105b657600080fd5b8201836020820111156105c857600080fd5b803590602001918460208302840111600160201b831117156105e957600080fd5b919390929091602081019035600160201b81111561060657600080fd5b82018360208201111561061857600080fd5b803590602001918460208302840111600160201b8311171561063957600080fd5b509092509050611b00565b610235611c68565b610310611cc9565b6102d66004803603604081101561066a57600080fd5b506001600160a01b038135169060200135611ec9565b6104b4611f31565b6102d66004803603604081101561069e57600080fd5b506001600160a01b038135169060200135611f45565b6106bc611f59565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156106f85781810151838201526020016106e0565b505050509050019250505060405180910390f35b610310612094565b6103106004803603602081101561072a57600080fd5b50356121ae565b610310612213565b6102d66004803603604081101561074f57600080fd5b506001600160a01b038135169060200135612219565b6103106004803603604081101561077b57600080fd5b506001600160a01b0381358116916020013516612225565b61022b600480360360208110156107a957600080fd5b5035612250565b6103106123e4565b61022b600480360360208110156107ce57600080fd5b50356001600160a01b03166123ea565b806107e8816123ff565b610823576040805162461bcd60e51b815260206004820152600760248201526610afba37b5b2b760c91b604482015290519081900360640190fd5b6000610848610830610d4a565b6108428661083c612094565b90612554565b906125ad565b905061085433856125ef565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663825139096040518163ffffffff1660e01b815260040160206040518083038186803b1580156108af57600080fd5b505afa1580156108c3573d6000803e3d6000fd5b505050506040513d60208110156108d957600080fd5b5051905080156109055760006108f56127106108428585612554565b905061090183826126eb565b9250505b6000846001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561095457600080fd5b505afa158015610968573d6000803e3d6000fd5b505050506040513d602081101561097e57600080fd5b5051905082811015610bb75760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663da8c229e306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156109f957600080fd5b505afa158015610a0d573d6000803e3d6000fd5b505050506040513d6020811015610a2357600080fd5b505190506000610a3385846126eb565b90506000826001600160a01b031663d9f9027f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7057600080fd5b505afa158015610a84573d6000803e3d6000fd5b505050506040513d6020811015610a9a57600080fd5b50511115610b1257816001600160a01b031663f3fef3a388836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610af957600080fd5b505af1158015610b0d573d6000803e3d6000fd5b505050505b6000876001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610b6157600080fd5b505afa158015610b75573d6000803e3d6000fd5b505050506040513d6020811015610b8b57600080fd5b505190506000610b9b82866126eb565b905082811015610bb257610baf858261272d565b96505b505050505b610bcb6001600160a01b0386163385612787565b60408051848152905133917f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364919081900360200190a2505050505050565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610c955780601f10610c6a57610100808354040283529160200191610c95565b820191906000526020600020905b815481529060010190602001808311610c7857829003601f168201915b5050505050905090565b6000610cb3610cac6127de565b84846127e2565b5060015b92915050565b6000610cb7612710610842600654856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610d1857600080fd5b505afa158015610d2c573d6000803e3d6000fd5b505050506040513d6020811015610d4257600080fd5b505190612554565b60025490565b6000610d5d84848461283c565b610dcd84610d696127de565b610dc8856040518060600160405280602881526020016131f4602891396001600160a01b038a16600090815260016020526040812090610da76127de565b6001600160a01b031681526020810191909152604001600020549190612896565b6127e2565b5060015b9392505050565b60055460ff1690565b6000610cb3610dee6127de565b84610dc88560016000610dff6127de565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061272d565b6000610e3b8484611f45565b50836001600160a01b0316336001600160a01b03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1685856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610eb6578181015183820152602001610e9e565b50505050905090810190601f168015610ee35780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3610efa8461292d565b15610dcd57610dcd848484612933565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b9b8af0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6357600080fd5b505afa158015610f77573d6000803e3d6000fd5b505050506040513d6020811015610f8d57600080fd5b505115610fca576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631fe4a6866040518163ffffffff1660e01b815260040160206040518083038186803b15801561102357600080fd5b505afa158015611037573d6000803e3d6000fd5b505050506040513d602081101561104d57600080fd5b50516001600160a01b03163314611099576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6127108111156110d8576040805162461bcd60e51b815260206004820152600560248201526410afb6b4b760d91b604482015290519081900360640190fd5b600655565b6000826110e9816123ff565b611124576040805162461bcd60e51b815260206004820152600760248201526610afba37b5b2b760c91b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b9b8af0b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561117d57600080fd5b505afa158015611191573d6000803e3d6000fd5b505050506040513d60208110156111a757600080fd5b5051156111e4576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b60008311611224576040805162461bcd60e51b81526020600482015260086024820152670857d85b5bdd5b9d60c21b604482015290519081900360640190fd5b600061122e612094565b90506000856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561127f57600080fd5b505afa158015611293573d6000803e3d6000fd5b505050506040513d60208110156112a957600080fd5b505190506112c26001600160a01b038716333088612a0d565b61134581876001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561131357600080fd5b505afa158015611327573d6000803e3d6000fd5b505050506040513d602081101561133d57600080fd5b5051906126eb565b9450841561138f576113578686612a67565b94506000611363610d4a565b11156113825761137f82610842611378610d4a565b8890612554565b94505b61138c848661272d565b93505b83156114275761139f3385612af9565b6007546113aa610d4a565b11156113f0576040805162461bcd60e51b815260206004820152601060248201526f03e746f74616c4465706f7369744361760841b604482015290519081900360640190fd5b60408051858152905133917fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c919081900360200190a25b50505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b9b8af0b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114ad57600080fd5b505afa1580156114c1573d6000803e3d6000fd5b505050506040513d60208110156114d757600080fd5b505115611514576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631fe4a6866040518163ffffffff1660e01b815260040160206040518083038186803b15801561156d57600080fd5b505afa158015611581573d6000803e3d6000fd5b505050506040513d602081101561159757600080fd5b50516001600160a01b031633146115e3576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60075481565b6000610dd18383611ec9565b81611627816123ff565b611662576040805162461bcd60e51b815260206004820152600760248201526610afba37b5b2b760c91b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b9b8af0b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116bb57600080fd5b505afa1580156116cf573d6000803e3d6000fd5b505050506040513d60208110156116e557600080fd5b505115611722576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634bdaeac16040518163ffffffff1660e01b815260040160206040518083038186803b15801561177b57600080fd5b505afa15801561178f573d6000803e3d6000fd5b505050506040513d60208110156117a557600080fd5b50516001600160a01b031633146117f0576040805162461bcd60e51b815260206004820152600a60248201526910b430b93b32b9ba32b960b11b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637ae6c8d4836040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561185d57600080fd5b505afa158015611871573d6000803e3d6000fd5b505050506040513d602081101561188757600080fd5b50516118c7576040805162461bcd60e51b815260206004820152600a602482015269215f737472617465677960b01b604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663da8c229e306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561193657600080fd5b505afa15801561194a573d6000803e3d6000fd5b505050506040513d602081101561196057600080fd5b5051604080516371f4f3fb60e01b815290519192506001600160a01b038316916371f4f3fb91600480820192602092909190829003018186803b1580156119a657600080fd5b505afa1580156119ba573d6000803e3d6000fd5b505050506040513d60208110156119d057600080fd5b505115611ab95760006119e285610cbd565b90506119f86001600160a01b0386168383612787565b816001600160a01b03166338e886108587846040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b158015611a6057600080fd5b505af1158015611a74573d6000803e3d6000fd5b50506040805184815290516001600160a01b03891693507f9b883692663cf2cc636d9eda0392f2c7ff1a3163a5cef27fa1f8bb438ec73ab592509081900360200190a2505b50505050565b6001600160a01b031660009081526020819052604090205490565b6000611afb611ae7610d4a565b610842670de0b6b3a764000061083c612094565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b9b8af0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b5b57600080fd5b505afa158015611b6f573d6000803e3d6000fd5b505050506040513d6020811015611b8557600080fd5b505115611bc2576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b838214611c00576040805162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015290519081900360640190fd5b60005b60ff8116831115611c5f57611c55611c4e87878460ff16818110611c2357fe5b905060200201356001600160a01b031686868560ff16818110611c4257fe5b905060200201356110dd565b839061272d565b9150600101611c03565b50949350505050565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610c955780601f10610c6a57610100808354040283529160200191610c95565b600060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663450efe21306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060006040518083038186803b158015611d3a57600080fd5b505afa158015611d4e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611d7757600080fd5b8101908080516040519392919084600160201b821115611d9657600080fd5b908301906020820185811115611dab57600080fd5b82518660208202830111600160201b82111715611dc757600080fd5b82525081516020918201928201910280838360005b83811015611df4578181015183820152602001611ddc565b50505050905001604052505050905060005b81518160ff161015611ec4576000828260ff1681518110611e2357fe5b60200260200101519050611eb9611eb282836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015611e8157600080fd5b505afa158015611e95573d6000803e3d6000fd5b505050506040513d6020811015611eab57600080fd5b5051612a67565b859061272d565b935050600101611e06565b505090565b6000610cb3611ed66127de565b84610dc8856040518060600160405280602581526020016132b06025913960016000611f006127de565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190612896565b60055461010090046001600160a01b031681565b6000610cb3611f526127de565b848461283c565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663450efe21306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060006040518083038186803b158015611fc857600080fd5b505afa158015611fdc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561200557600080fd5b8101908080516040519392919084600160201b82111561202457600080fd5b90830190602082018581111561203957600080fd5b82518660208202830111600160201b8211171561205557600080fd5b82525081516020918201928201910280838360005b8381101561208257818101518382015260200161206a565b50505050905001604052505050905090565b6000611afb7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663da8c229e306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561210657600080fd5b505afa15801561211a573d6000803e3d6000fd5b505050506040513d602081101561213057600080fd5b50516040805163722713f760e01b815290516001600160a01b039092169163722713f791600480820192602092909190829003018186803b15801561217457600080fd5b505afa158015612188573d6000803e3d6000fd5b505050506040513d602081101561219e57600080fd5b50516121a8611cc9565b9061272d565b6000610cb7612710610842847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663825139096040518163ffffffff1660e01b815260040160206040518083038186803b158015610d1857600080fd5b61271081565b6000610dd18383610de1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b9b8af0b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156122a957600080fd5b505afa1580156122bd573d6000803e3d6000fd5b505050506040513d60208110156122d357600080fd5b505115612310576040805162461bcd60e51b81526020600482015260066024820152651a185b1d195960d21b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631fe4a6866040518163ffffffff1660e01b815260040160206040518083038186803b15801561236957600080fd5b505afa15801561237d573d6000803e3d6000fd5b505050506040513d602081101561239357600080fd5b50516001600160a01b031633146123df576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b600755565b60065481565b6123fc6123f633611abf565b826107de565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e744092e836040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561246e57600080fd5b505afa158015612482573d6000803e3d6000fd5b505050506040513d602081101561249857600080fd5b50518015610cb75750306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a622ee7c846040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561251857600080fd5b505afa15801561252c573d6000803e3d6000fd5b505050506040513d602081101561254257600080fd5b50516001600160a01b03161492915050565b60008261256357506000610cb7565b8282028284828161257057fe5b0414610dd15760405162461bcd60e51b81526004018080602001828103825260218152602001806131d36021913960400191505060405180910390fd5b6000610dd183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612be9565b6001600160a01b0382166126345760405162461bcd60e51b815260040180806020018281038252602181526020018061321c6021913960400191505060405180910390fd5b612640826000836127d9565b61267d81604051806060016040528060228152602001613143602291396001600160a01b0385166000908152602081905260409020549190612896565b6001600160a01b0383166000908152602081905260409020556002546126a390826126eb565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000610dd183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612896565b600082820183811015610dd1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526127d9908490612c4e565b505050565b3390565b816001600160a01b038116301415612831576040805162461bcd60e51b815260206004820152600d60248201526c2176616c69644164647265737360981b604482015290519081900360640190fd5b611ab9848484612cff565b816001600160a01b03811630141561288b576040805162461bcd60e51b815260206004820152600d60248201526c2176616c69644164647265737360981b604482015290519081900360640190fd5b611ab9848484612deb565b600081848411156129255760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128ea5781810151838201526020016128d2565b50505050905090810190601f1680156129175780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b3b151590565b604051635260769b60e11b815233600482018181526024830185905260606044840190815284516064850152845187946001600160a01b0386169463a4c0ed369490938993899360840190602085019080838360005b838110156129a1578181015183820152602001612989565b50505050905090810190601f1680156129ce5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156129ef57600080fd5b505af1158015612a03573d6000803e3d6000fd5b5050505050505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611ab9908590612c4e565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015612aa357600080fd5b505afa158015612ab7573d6000803e3d6000fd5b505050506040513d6020811015612acd57600080fd5b505160ff1690506012811015612af157612aee836012839003600a0a612554565b92505b509092915050565b6001600160a01b038216612b54576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b612b60600083836127d9565b600254612b6d908261272d565b6002556001600160a01b038216600090815260208190526040902054612b93908261272d565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008183612c385760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128ea5781810151838201526020016128d2565b506000838581612c4457fe5b0495945050505050565b6060612ca3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612f469092919063ffffffff16565b8051909150156127d957808060200190516020811015612cc257600080fd5b50516127d95760405162461bcd60e51b815260040180806020018281038252602a815260200180613286602a913960400191505060405180910390fd5b6001600160a01b038316612d445760405162461bcd60e51b81526004018080602001828103825260248152602001806132626024913960400191505060405180910390fd5b6001600160a01b038216612d895760405162461bcd60e51b81526004018080602001828103825260228152602001806131656022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316612e305760405162461bcd60e51b815260040180806020018281038252602581526020018061323d6025913960400191505060405180910390fd5b6001600160a01b038216612e755760405162461bcd60e51b81526004018080602001828103825260238152602001806131206023913960400191505060405180910390fd5b612e808383836127d9565b612ebd81604051806060016040528060268152602001613187602691396001600160a01b0386166000908152602081905260409020549190612896565b6001600160a01b038085166000908152602081905260408082209390935590841681522054612eec908261272d565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6060612f558484600085612f5d565b949350505050565b606082471015612f9e5760405162461bcd60e51b81526004018080602001828103825260268152602001806131ad6026913960400191505060405180910390fd5b612fa78561292d565b612ff8576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106130375780518252601f199092019160209182019101613018565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613099576040519150601f19603f3d011682016040523d82523d6000602084013e61309e565b606091505b50915091506130ae8282866130b9565b979650505050505050565b606083156130c8575081610dd1565b8251156130d85782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156128ea5781810151838201526020016128d256fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122096ec597462b4e835db056e5db17ae8431e975727175f5807cc10f6364764ab7264736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "available(address)": {
        "details": "Custom logic in here for how much the vault allows to be borrowedSets minimum required on-hand to keep small withdrawals cheap",
        "params": {
          "_token": "The address of the token"
        }
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "params": {
          "_manager": "The address of the vault manager contract",
          "_name": "The name of the vault token for depositors",
          "_symbol": "The symbol of the vault token for depositors"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "decreaseApproval(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to deposit",
          "_token": "The address of the token"
        }
      },
      "depositMultiple(address[],uint256[])": {
        "details": "Users must approve the vault to spend their stablecoin",
        "params": {
          "_amounts": "The amounts of each token being deposited",
          "_tokens": "The addresses of each token being deposited"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "increaseApproval(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "setGauge(address)": {
        "details": "Allow to be unset with the zero address",
        "params": {
          "_gauge": "The address of the gauge"
        }
      },
      "setMin(uint256)": {
        "details": "min is the minimum percent of funds to keep small withdrawals cheap",
        "params": {
          "_min": "The new min value"
        }
      },
      "setTotalDepositCap(uint256)": {
        "details": "totalDepositCap is the maximum amount of value that can be deposited to the metavault at a time",
        "params": {
          "_totalDepositCap": "The new totalDepositCap value"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferAndCall(address,uint256,bytes)": {
        "details": "transfer token to a contract address with additional data if the recipient is a contact.",
        "params": {
          "_data": "The extra data to be passed to the receiving contract.",
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "withdraw(uint256,address)": {
        "params": {
          "_output": "The address of the token to receive",
          "_shares": "The amount of shares to withdraw"
        }
      },
      "withdrawAll(address)": {
        "params": {
          "_output": "The address of the desired token to receive"
        }
      },
      "withdrawFee(uint256)": {
        "params": {
          "_amount": "The amount to withdraw"
        }
      }
    },
    "title": "Vault",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "available(address)": {
        "notice": "Returns the amount of tokens available to be sent to strategies"
      },
      "balance()": {
        "notice": "Returns the total balance of the vault, including strategies"
      },
      "balanceOfThis()": {
        "notice": "Returns the balance of allowed tokens present on the vault only"
      },
      "deposit(address,uint256)": {
        "notice": "Deposits the given token into the vault"
      },
      "depositMultiple(address[],uint256[])": {
        "notice": "Deposits multiple tokens simultaneously to the vault"
      },
      "earn(address,address)": {
        "notice": "Sends accrued 3CRV tokens on the metavault to the controller to be deposited to strategies"
      },
      "getPricePerFullShare()": {
        "notice": "Returns the rate of vault shares"
      },
      "getTokens()": {
        "notice": "Returns an array of the tokens for this vault"
      },
      "setGauge(address)": {
        "notice": "Sets the value of this vault's gauge"
      },
      "setMin(uint256)": {
        "notice": "Sets the value for min"
      },
      "setTotalDepositCap(uint256)": {
        "notice": "Sets the value for the totalDepositCap"
      },
      "withdraw(uint256,address)": {
        "notice": "Withdraws an amount of shares to a given output token"
      },
      "withdrawAll(address)": {
        "notice": "Withdraw the entire balance for an account"
      },
      "withdrawFee(uint256)": {
        "notice": "Returns the fee for withdrawing the given amount"
      }
    },
    "notice": "The vault is where users deposit and withdraw like-kind assets that have been added by governance.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 417,
        "contract": "contracts/v3/Vault.sol:Vault",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 423,
        "contract": "contracts/v3/Vault.sol:Vault",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 425,
        "contract": "contracts/v3/Vault.sol:Vault",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 427,
        "contract": "contracts/v3/Vault.sol:Vault",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 429,
        "contract": "contracts/v3/Vault.sol:Vault",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 431,
        "contract": "contracts/v3/Vault.sol:Vault",
        "label": "_decimals",
        "offset": 0,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 23140,
        "contract": "contracts/v3/Vault.sol:Vault",
        "label": "gauge",
        "offset": 1,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 23142,
        "contract": "contracts/v3/Vault.sol:Vault",
        "label": "min",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 23144,
        "contract": "contracts/v3/Vault.sol:Vault",
        "label": "totalDepositCap",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}